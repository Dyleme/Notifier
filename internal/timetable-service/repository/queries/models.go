// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1

package queries

import (
	domains "github.com/Dyleme/Notifier/internal/timetable-service/domains"
	"github.com/jackc/pgx/v5/pgtype"
)

type DefaultUserNotificationParam struct {
	UserID    int32                      `db:"user_id"`
	CreatedAt pgtype.Timestamp           `db:"created_at"`
	Params    domains.NotificationParams `db:"params"`
}

type Event struct {
	ID                 int32                       `db:"id"`
	CreatedAt          pgtype.Timestamp            `db:"created_at"`
	Text               string                      `db:"text"`
	Description        pgtype.Text                 `db:"description"`
	UserID             int32                       `db:"user_id"`
	Start              pgtype.Timestamptz          `db:"start"`
	Done               bool                        `db:"done"`
	NotificationParams *domains.NotificationParams `db:"notification_params"`
	SendTime           pgtype.Timestamptz          `db:"send_time"`
	Sended             bool                        `db:"sended"`
}

type Task struct {
	ID        int32            `db:"id"`
	CreatedAt pgtype.Timestamp `db:"created_at"`
	Message   string           `db:"message"`
	UserID    int32            `db:"user_id"`
	Periodic  bool             `db:"periodic"`
	Archived  bool             `db:"archived"`
}

type TgImage struct {
	ID       int32  `db:"id"`
	Filename string `db:"filename"`
	TgFileID string `db:"tg_file_id"`
}

type User struct {
	ID             int32       `db:"id"`
	Email          pgtype.Text `db:"email"`
	PasswordHash   pgtype.Text `db:"password_hash"`
	TgID           pgtype.Int4 `db:"tg_id"`
	TimezoneOffset int32       `db:"timezone_offset"`
	TimezoneDst    bool        `db:"timezone_dst"`
}
